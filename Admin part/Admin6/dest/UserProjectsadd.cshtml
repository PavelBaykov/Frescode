@functions {

	//
	// Page class for UserProjects
	//
	public class cUserProjects_add<C, S> : cUserProjects_add_base<C, S>
		where C : cConnection, new()
		where S : cAdvancedSecurity, new()
	{

		// TblAddReturnPage
		public string Get_TblAddReturnPage() {
			return ReturnUrl;		
		}

		// TblEditReturnPage
		public string Get_TblEditReturnPage() {
			return ReturnUrl;		
		}
	}

	// UserProjects_add	
	public static cUserProjects_add<cConnection, cAdvancedSecurity> UserProjects_add {
		get { return (cUserProjects_add<cConnection, cAdvancedSecurity>)ew_PageData["UserProjects_add"]; }
		set { ew_PageData["UserProjects_add"] = value; }
	}

	// CurrentPage
	public static cUserProjects_add<cConnection, cAdvancedSecurity> CurrentPage {
		get { return (cUserProjects_add<cConnection, cAdvancedSecurity>)ew_PageData["CurrentPage"]; }
		set { ew_PageData["CurrentPage"] = value; }
	}

	// CurrentTable
	public static cUserProjects_add<cConnection, cAdvancedSecurity> CurrentTable {
		get { return CurrentPage; }
		set { CurrentPage = value; }
	}
}
@{
	EW_ROOT_RELATIVE_PATH = "..";
	EW_RELATIVE_PATH = "";
	Layout = EW_RELATIVE_PATH + "_layout.cshtml";

	// Header
	ew_Header(false);

	// Create page object
	if (UserProjects_add == null) {
		UserProjects_add = new cUserProjects_add<cConnection, cAdvancedSecurity>();
	}

	// Page init
	UserProjects_add.Page_Init();

	// Page main
	UserProjects_add.Page_Main();

	// Global Page Rendering event
	Page_Rendering();

	// Page Rendering event
	UserProjects_add.Page_Render();
}
<script type="text/javascript">

// Page object
var UserProjects_add = new ew_Page("UserProjects_add");
UserProjects_add.PageID = "add"; // Page ID
var EW_PAGE_ID = UserProjects_add.PageID; // For backward compatibility

// Form object
var fUserProjectsadd = new ew_Form("fUserProjectsadd");

// Validate form
fUserProjectsadd.Validate = function() {
	if (!this.ValidateRequired)
		return true; // Ignore validation
	var $ = jQuery, fobj = this.GetForm(), $fobj = $(fobj);
	this.PostAutoSuggest();	
	if ($fobj.find("#a_confirm").val() == "F")
		return true;
	var elm, felm, uelm, addcnt = 0;
	var $k = $fobj.find("#" + this.FormKeyCountName); // Get key_count
	var rowcnt = ($k[0]) ? parseInt($k.val(), 10) : 1;
	var startcnt = (rowcnt == 0) ? 0 : 1; // Check rowcnt == 0 => Inline-Add
	var gridinsert = $fobj.find("#a_list").val() == "gridinsert";
	for (var i = startcnt; i <= rowcnt; i++) {
		var infix = ($k[0]) ? String(i) : "";
		$fobj.data("rowindex", infix);
		elm = this.GetElements("x" + infix + "_User_Id");
		if (elm && !ew_IsHidden(elm) && !ew_HasValue(elm))
			return this.OnError(elm, "@(Html.Raw(ew_JsEncode2(UserProjects.User_Id.ReqErrMsg.Replace("%s", UserProjects.User_Id.FldCaption))))");
		elm = this.GetElements("x" + infix + "_Project_Id");
		if (elm && !ew_IsHidden(elm) && !ew_HasValue(elm))
			return this.OnError(elm, "@(Html.Raw(ew_JsEncode2(UserProjects.Project_Id.ReqErrMsg.Replace("%s", UserProjects.Project_Id.FldCaption))))");

		// Set up row object
		ew_ElementsToRow(fobj);

		// Fire Form_CustomValidate event
		if (!this.Form_CustomValidate(fobj))
			return false;
	}

	// Process detail forms
	var dfs = $fobj.find("input[name='detailpage']").get();
	for (var i = 0; i < dfs.length; i++) {
		var df = dfs[i], val = df.value;
		if (val && ewForms[val])
			if (!ewForms[val].Validate())
				return false;
	}
	return true;
}

// Form_CustomValidate event
fUserProjectsadd.Form_CustomValidate = 
 function(fobj) { // DO NOT CHANGE THIS LINE!

 	// Your custom validation code here, return false if invalid. 
 	return true;
 }

// Use JavaScript validation or not
fUserProjectsadd.ValidateRequired = @((EW_CLIENT_VALIDATE) ? "true" : "false");

// Dynamic selection lists
fUserProjectsadd.Lists["x_User_Id"] = {"LinkField":"x_Id","Ajax":true,"AutoFill":false,"DisplayFields":["x_FirstName","x_LastName","",""],"ParentFields":[],"FilterFields":[],"Options":[]};
fUserProjectsadd.Lists["x_Project_Id"] = {"LinkField":"x_Id","Ajax":true,"AutoFill":false,"DisplayFields":["x_zName","","",""],"ParentFields":[],"FilterFields":[],"Options":[]};

// Form object for search
</script>
<script type="text/javascript">

// Write your client script here, no need to add script tags.
</script>
<div class="ewToolbar">
@if (ew_Empty(UserProjects.Export)) {<div style="display: inline-block">
@{
	if (Breadcrumb != null) {
		Breadcrumb.Render();
	}
}
</div>}
@if (ew_Empty(UserProjects.Export)) {
@Html.Raw(Language.SelectionForm())
}
	<div class="clearfix"></div>
</div>
@{
	UserProjects_add.ShowPageHeader();
}
@{
	UserProjects_add.ShowMessage();
}
<form name="fUserProjectsadd" id="fUserProjectsadd" class="form-horizontal ewForm ewAddForm" action="@ew_CurrentPage()" method="post">
<br>
@if (UserProjects_add.CheckToken) { 
<input type="hidden" name="@EW_TOKEN_NAME" value="@UserProjects_add.Token">
}
<input type="hidden" name="t" value="UserProjects">
<input type="hidden" name="a_add" id="a_add" value="A">
<div>
@if (UserProjects.User_Id.Visible) { // User_Id.Visible (begin)
	<div id="r_User_Id" class="form-group">
		<label id="elh_UserProjects_User_Id" for="x_User_Id" class="col-sm-2 control-label ewLabel">@Html.Raw(UserProjects.User_Id.FldCaption)@Html.Raw(Language.Phrase("FieldRequiredIndicator"))</label>
		<div class="col-sm-10"><div @(Html.Raw(UserProjects.User_Id.CellAttributes))>
<span id="el_UserProjects_User_Id">
<select data-field="x_User_Id" id="x_User_Id" name="x_User_Id" @(Html.Raw(UserProjects.User_Id.EditAttributes))>
@{ emptywrk = true; }
@if (ew_IsList(UserProjects.User_Id.EditValue)) {
	alwrk = (List<OrderedDictionary>)UserProjects.User_Id.EditValue;
	foreach (var odwrk in alwrk) {
		if (ew_SameStr(odwrk[0], UserProjects.User_Id.CurrentValue)) {
			selwrk = " selected=\"selected\"";
			emptywrk = false;
		} else {
			selwrk = "";
		}
		for (var i = 1; i < odwrk.Count; i++) {
			odwrk[i] = ew_RemoveHtml(Convert.ToString(odwrk[i]));
		}
<option value="@odwrk[0]" @(Html.Raw(selwrk))>
@odwrk[1]
@if (ew_NotEmpty(odwrk[2])) {
	@ew_ValueSeparator(1,UserProjects.User_Id)@odwrk[2]
}
</option>
	}
}
</select>
<span>@{
sSqlWrk = "SELECT [Id], [FirstName] AS [DispFld], [LastName] AS [Disp2Fld], '' AS [Disp3Fld], '' AS [Disp4Fld] FROM [dbo].[AspNetUsers]";
sWhereWrk = "";
sLookupTblFilter = Convert.ToString(UserProjects_add.GetCustomValue("FldSelectFilter", "User_Id"));
if (ew_NotEmpty(sLookupTblFilter)) {
	sWhereWrk = ew_JoinFilter(sWhereWrk, sLookupTblFilter);
}

// Call Lookup selecting
UserProjects.Lookup_Selecting(UserProjects.User_Id, ref sWhereWrk);
if (sWhereWrk != "") {
	sSqlWrk += " WHERE " + sWhereWrk;
}
}</span>
<input type="hidden" name="s_x_User_Id" id="s_x_User_Id" value="s=@(Html.Raw(ew_Encrypt(sSqlWrk)))&amp;f0=@(Html.Raw(ew_Encrypt("[Id] = {filter_value}")))&amp;t0=202">
</span>
@Html.Raw(UserProjects.User_Id.CustomMsg)</div></div>
	</div>
}  @* User_Id.Visible (end) *@
@if (UserProjects.Project_Id.Visible) { // Project_Id.Visible (begin)
	<div id="r_Project_Id" class="form-group">
		<label id="elh_UserProjects_Project_Id" for="x_Project_Id" class="col-sm-2 control-label ewLabel">@Html.Raw(UserProjects.Project_Id.FldCaption)@Html.Raw(Language.Phrase("FieldRequiredIndicator"))</label>
		<div class="col-sm-10"><div @(Html.Raw(UserProjects.Project_Id.CellAttributes))>
<span id="el_UserProjects_Project_Id">
<select data-field="x_Project_Id" id="x_Project_Id" name="x_Project_Id" @(Html.Raw(UserProjects.Project_Id.EditAttributes))>
@{ emptywrk = true; }
@if (ew_IsList(UserProjects.Project_Id.EditValue)) {
	alwrk = (List<OrderedDictionary>)UserProjects.Project_Id.EditValue;
	foreach (var odwrk in alwrk) {
		if (ew_SameStr(odwrk[0], UserProjects.Project_Id.CurrentValue)) {
			selwrk = " selected=\"selected\"";
			emptywrk = false;
		} else {
			selwrk = "";
		}
		for (var i = 1; i < odwrk.Count; i++) {
			odwrk[i] = ew_RemoveHtml(Convert.ToString(odwrk[i]));
		}
<option value="@odwrk[0]" @(Html.Raw(selwrk))>
@odwrk[1]
</option>
	}
}
</select>
<span>@{
sSqlWrk = "SELECT [Id], [Name] AS [DispFld], '' AS [Disp2Fld], '' AS [Disp3Fld], '' AS [Disp4Fld] FROM [dbo].[Projects]";
sWhereWrk = "";
sLookupTblFilter = Convert.ToString(UserProjects_add.GetCustomValue("FldSelectFilter", "Project_Id"));
if (ew_NotEmpty(sLookupTblFilter)) {
	sWhereWrk = ew_JoinFilter(sWhereWrk, sLookupTblFilter);
}

// Call Lookup selecting
UserProjects.Lookup_Selecting(UserProjects.Project_Id, ref sWhereWrk);
if (sWhereWrk != "") {
	sSqlWrk += " WHERE " + sWhereWrk;
}
}</span>
<input type="hidden" name="s_x_Project_Id" id="s_x_Project_Id" value="s=@(Html.Raw(ew_Encrypt(sSqlWrk)))&amp;f0=@(Html.Raw(ew_Encrypt("[Id] = {filter_value}")))&amp;t0=3">
</span>
@Html.Raw(UserProjects.Project_Id.CustomMsg)</div></div>
	</div>
}  @* Project_Id.Visible (end) *@
</div>
@if (UserProjects_add.Recordset != null) { // Close the main data reader for detail tables // ASPX
	UserProjects_add.Recordset.Close();
	UserProjects_add.Recordset.Dispose();
}
<div class="form-group">
	<div class="col-sm-offset-2 col-sm-10">
<button class="btn btn-primary ewButton" name="btnAction" id="btnAction" type="submit">@Html.Raw(Language.Phrase("AddBtn"))</button>
	</div>
</div>
</form>
<script type="text/javascript">
fUserProjectsadd.Init();
</script>
@{
	UserProjects_add.ShowPageFooter();
	if (EW_DEBUG_ENABLED) {
		ew_Write(ew_DebugMsg());		
		ew_Write(ew_ElapsedTime(StartTime));		
	}
}
<script type="text/javascript">

// Write your table-specific startup script here
// document.write("page loaded");

</script>
@{
	UserProjects_add.Page_Terminate();
}
