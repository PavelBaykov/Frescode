@functions {

	//
	// Page class for AspNetUsers
	//
	public class cAspNetUsers_delete<C, S> : cAspNetUsers_delete_base<C, S>
		where C : cConnection, new()
		where S : cAdvancedSecurity, new()
	{

		// TblAddReturnPage
		public string Get_TblAddReturnPage() {
			return ReturnUrl;		
		}

		// TblEditReturnPage
		public string Get_TblEditReturnPage() {
			return ReturnUrl;		
		}

		// Row Inserting event
		public override bool Row_Inserting(OrderedDictionary rsold, ref OrderedDictionary rsnew) {

			// Enter your code here
			// To cancel, set return value to False and error message to CancelMessage

			rsnew["Id"] =Guid.NewGuid().ToString();
			rsnew["EmailConfirmed"]=false;
			rsnew["PhoneNumberConfirmed"]=false;
			rsnew["TwoFactorEnabled"]=false;
			rsnew["LockoutEnabled"]=false;
			rsnew["AccessFailedCount"]=0;
			rsnew["UserName"]=rsnew["Email"];
			rsnew["DateCreated"]=DateTime.Now;
			rsnew["UserRole"]=1;

		/*
			byte[] salt;
			byte[] buffer2;
			string password = Convert.ToString(rsnew["PasswordHash"]);
			using (System.Security.Cryptography.Rfc2898DeriveBytes bytes = new System.Security.Cryptography.Rfc2898DeriveBytes(password, 0x10, 0x3e8))
			{
				salt = bytes.Salt;
				buffer2 = bytes.GetBytes(0x20);
			}
			byte[] dst = new byte[0x31];
			Buffer.BlockCopy(salt, 0, dst, 1, 0x10);
			Buffer.BlockCopy(buffer2, 0, dst, 0x11, 0x20);
			rsnew["PasswordHash"]=Convert.ToBase64String(dst);*/
			Microsoft.AspNet.Identity.PasswordHasher hasher = new Microsoft.AspNet.Identity.PasswordHasher();
			rsnew["PasswordHash"]=hasher.HashPassword(Convert.ToString(rsnew["PasswordHash"]));
			rsnew["SecurityStamp"] =Guid.NewGuid().ToString();
			return true;
		}
	}

	// AspNetUsers_delete	
	public static cAspNetUsers_delete<cConnection, cAdvancedSecurity> AspNetUsers_delete {
		get { return (cAspNetUsers_delete<cConnection, cAdvancedSecurity>)ew_PageData["AspNetUsers_delete"]; }
		set { ew_PageData["AspNetUsers_delete"] = value; }
	}

	// CurrentPage
	public static cAspNetUsers_delete<cConnection, cAdvancedSecurity> CurrentPage {
		get { return (cAspNetUsers_delete<cConnection, cAdvancedSecurity>)ew_PageData["CurrentPage"]; }
		set { ew_PageData["CurrentPage"] = value; }
	}

	// CurrentTable
	public static cAspNetUsers_delete<cConnection, cAdvancedSecurity> CurrentTable {
		get { return CurrentPage; }
		set { CurrentPage = value; }
	}
}
@{
	EW_ROOT_RELATIVE_PATH = "..";
	EW_RELATIVE_PATH = "";
	Layout = EW_RELATIVE_PATH + "_layout.cshtml";

	// Header
	ew_Header(false);

	// Create page object
	if (AspNetUsers_delete == null) {
		AspNetUsers_delete = new cAspNetUsers_delete<cConnection, cAdvancedSecurity>();
	}

	// Page init
	AspNetUsers_delete.Page_Init();

	// Page main
	AspNetUsers_delete.Page_Main();

	// Global Page Rendering event
	Page_Rendering();

	// Page Rendering event
	AspNetUsers_delete.Page_Render();
}
<script type="text/javascript">

// Page object
var AspNetUsers_delete = new ew_Page("AspNetUsers_delete");
AspNetUsers_delete.PageID = "delete"; // Page ID
var EW_PAGE_ID = AspNetUsers_delete.PageID; // For backward compatibility

// Form object
var fAspNetUsersdelete = new ew_Form("fAspNetUsersdelete");

// Form_CustomValidate event
fAspNetUsersdelete.Form_CustomValidate = 
 function(fobj) { // DO NOT CHANGE THIS LINE!

 	// Your custom validation code here, return false if invalid. 
 	return true;
 }

// Use JavaScript validation or not
fAspNetUsersdelete.ValidateRequired = @((EW_CLIENT_VALIDATE) ? "true" : "false");

// Dynamic selection lists
fAspNetUsersdelete.Lists["x_Customer_Id"] = {"LinkField":"x_Id","Ajax":true,"AutoFill":false,"DisplayFields":["x_Id","","",""],"ParentFields":[],"FilterFields":[],"Options":[]};

// Form object for search
</script>
<script type="text/javascript">

// Write your client script here, no need to add script tags.
</script>
@{

	// Load records for display
	AspNetUsers_delete.Recordset = AspNetUsers_delete.LoadRecordset();
	if (AspNetUsers_delete.TotalRecs <= 0) { // No record found, exit
		if (AspNetUsers_delete.Recordset != null) {
			AspNetUsers_delete.Recordset.Close();
			AspNetUsers_delete.Recordset.Dispose();
		}
		AspNetUsers_delete.Page_Terminate("AspNetUserslist.cshtml"); // Return to list
	}
}
<div class="ewToolbar">
@if (ew_Empty(AspNetUsers.Export)) {<div style="display: inline-block">
@{
	if (Breadcrumb != null) {
		Breadcrumb.Render();
	}
}
</div>}
@if (ew_Empty(AspNetUsers.Export)) {
@Html.Raw(Language.SelectionForm())
}
	<div class="clearfix"></div>
</div>
@{
	AspNetUsers_delete.ShowPageHeader();
}
@{
	AspNetUsers_delete.ShowMessage();
}
<form name="fAspNetUsersdelete" id="fAspNetUsersdelete" class="form-inline ewForm ewDeleteForm" action="@ew_CurrentPage()" method="post">
<br>
@if (AspNetUsers_delete.CheckToken) { 
<input type="hidden" name="@EW_TOKEN_NAME" value="@AspNetUsers_delete.Token">
}
<input type="hidden" name="t" value="AspNetUsers">
<input type="hidden" name="a_delete" id="a_delete" value="D">
@foreach (object key in AspNetUsers_delete.RecKeys) {
	var keyvalue = Information.IsArray(key) ? String.Join(EW_COMPOSITE_KEY_SEPARATOR, (string[])key) : Convert.ToString(key);
<input type="hidden" name="key_m" value="@keyvalue">
}
<div class="ewGrid">
<div class="@((ew_IsResponsiveLayout()) ? "table-responsive" : "ewGridMiddlePanel")">
<table class="table ewTable">
@AspNetUsers.TableCustomInnerHtml
	<thead>
	<tr class="ewTableHeader">
@if (AspNetUsers.FirstName.Visible) { // FirstName (begin)
		<th><span id="elh_AspNetUsers_FirstName" class="AspNetUsers_FirstName">@Html.Raw(AspNetUsers.FirstName.FldCaption)</span></th>
} @* FirstName.Visible (end) *@
@if (AspNetUsers.LastName.Visible) { // LastName (begin)
		<th><span id="elh_AspNetUsers_LastName" class="AspNetUsers_LastName">@Html.Raw(AspNetUsers.LastName.FldCaption)</span></th>
} @* LastName.Visible (end) *@
@if (AspNetUsers.UserRole.Visible) { // UserRole (begin)
		<th><span id="elh_AspNetUsers_UserRole" class="AspNetUsers_UserRole">@Html.Raw(AspNetUsers.UserRole.FldCaption)</span></th>
} @* UserRole.Visible (end) *@
@if (AspNetUsers.Customer_Id.Visible) { // Customer_Id (begin)
		<th><span id="elh_AspNetUsers_Customer_Id" class="AspNetUsers_Customer_Id">@Html.Raw(AspNetUsers.Customer_Id.FldCaption)</span></th>
} @* Customer_Id.Visible (end) *@
	</tr>
	</thead>
	<tbody>
@{
AspNetUsers_delete.RecCnt = 0;
}
@while (AspNetUsers_delete.Recordset.Read()) {
	AspNetUsers_delete.RecCnt++;
	AspNetUsers_delete.RowCnt++;

	// Set row properties
	AspNetUsers.ResetAttrs();
	AspNetUsers.RowType = EW_ROWTYPE_VIEW; // View

	// Get the field contents
	AspNetUsers_delete.LoadRowValues(AspNetUsers_delete.Recordset);

	// Render row
	AspNetUsers_delete.RenderRow();
	<tr @(Html.Raw(AspNetUsers.RowAttributes))>
@if (AspNetUsers.FirstName.Visible) { // FirstName (begin)
		<td @(Html.Raw(AspNetUsers.FirstName.CellAttributes))>
<span id="el@(AspNetUsers_delete.RowCnt)_AspNetUsers_FirstName" class="form-group AspNetUsers_FirstName">
<span @(Html.Raw(AspNetUsers.FirstName.ViewAttributes))>
@Html.Raw(AspNetUsers.FirstName.ListViewValue)</span>
</span>
</td>
} @* FirstName.Visible (end) *@
@if (AspNetUsers.LastName.Visible) { // LastName (begin)
		<td @(Html.Raw(AspNetUsers.LastName.CellAttributes))>
<span id="el@(AspNetUsers_delete.RowCnt)_AspNetUsers_LastName" class="form-group AspNetUsers_LastName">
<span @(Html.Raw(AspNetUsers.LastName.ViewAttributes))>
@Html.Raw(AspNetUsers.LastName.ListViewValue)</span>
</span>
</td>
} @* LastName.Visible (end) *@
@if (AspNetUsers.UserRole.Visible) { // UserRole (begin)
		<td @(Html.Raw(AspNetUsers.UserRole.CellAttributes))>
<span id="el@(AspNetUsers_delete.RowCnt)_AspNetUsers_UserRole" class="form-group AspNetUsers_UserRole">
<span @(Html.Raw(AspNetUsers.UserRole.ViewAttributes))>
@Html.Raw(AspNetUsers.UserRole.ListViewValue)</span>
</span>
</td>
} @* UserRole.Visible (end) *@
@if (AspNetUsers.Customer_Id.Visible) { // Customer_Id (begin)
		<td @(Html.Raw(AspNetUsers.Customer_Id.CellAttributes))>
<span id="el@(AspNetUsers_delete.RowCnt)_AspNetUsers_Customer_Id" class="form-group AspNetUsers_Customer_Id">
<span @(Html.Raw(AspNetUsers.Customer_Id.ViewAttributes))>
@Html.Raw(AspNetUsers.Customer_Id.ListViewValue)</span>
</span>
</td>
} @* Customer_Id.Visible (end) *@
	</tr>
}
@{
	AspNetUsers_delete.Recordset.Close();
	AspNetUsers_delete.Recordset.Dispose();
}
</tbody>
</table>
</div>
</div>
<div class="btn-group ewButtonGroup">
<button class="btn btn-primary ewButton" name="btnAction" id="btnAction" type="submit">@Html.Raw(Language.Phrase("DeleteBtn"))</button>
</div>
</form>
<script type="text/javascript">
fAspNetUsersdelete.Init();
</script>
@{
	AspNetUsers_delete.ShowPageFooter();
	if (EW_DEBUG_ENABLED) {
		ew_Write(ew_DebugMsg());		
		ew_Write(ew_ElapsedTime(StartTime));		
	}
}
<script type="text/javascript">

// Write your table-specific startup script here
// document.write("page loaded");

</script>
@{
	AspNetUsers_delete.Page_Terminate();
}
